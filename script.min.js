
function inNewTab() {
  return 0 == localStorage.currentTab ? !0 : !1;
}
function getLang() {
  return window.navigator.language;
}
function onAnchorClick(a) {
  return chrome.tabs.create({ selected: !0, url: a.srcElement.href }), !1;
}
function buildPopupDom(a, b) {
  if (null != b && b.length > 0) {
      var c;
      if ("whiteBar" == localStorage.mvsDisplayStyle)
          for ($("#mvs-module .title").prepend(chrome.i18n.getMessage("mvsTitle")), c = 0, nbrLinks = b.length; nbrLinks > c; ++c)
              $("#mvs-module #content").append('<a onClick="trackUsingMVS();" href="' + b[c] + '">' + BookmarksModule.getFavicon(b[c]) + site_name(b[c]) + "</a>");
      else if ("dropDownList" == localStorage.mvsDisplayStyle)
          for (c = 0, nbrLinks = b.length; nbrLinks > c; ++c)
              $("#mvs-module ul").append('<li><a onClick="trackUsingMVS();" ' + (inNewTab() ? 'target="_blank"' : "") + ' href="' + b[c] + '">' + BookmarksModule.getFavicon(b[c]) + formatTitle(site_name(b[c]), 20) + "</a></li>");
  } else
      "whiteBar" == localStorage.mvsDisplayStyle
          ? ($("#mvs-module .title").prepend(chrome.i18n.getMessage("mvsTitle")), $("#mvs-module #content").append('<div class="noLinks">' + chrome.i18n.getMessage("mvsNoLinks") + "</div>"))
          : "dropDownList" == localStorage.mvsDisplayStyle && $("#mvs-module ul").append('<span class="noLinks">' + chrome.i18n.getMessage("mvsNoLinks") + "</span>");
}
function buildTypedUrlList(a) {
  var b;
  b = "month" == localStorage.periodMostVisitedSites ? 187488e5 : "day" == localStorage.periodMostVisitedSites ? 864e5 : 6048e5;
  var c = new Date().getTime() - b,
      d = 0;
  chrome.history.search({ text: "", startTime: c }, function (a) {
      for (var b = 0; b < a.length; ++b) {
          var c = a[b].url,
              e = function (a) {
                  return function (b) {
                      f(a, b);
                  };
              };
          chrome.history.getVisits({ url: c }, e(c)), d++;
      }
      d || g();
  });
  var e = {},
      f = function (a, b) {
          for (var c = 0, f = b.length; f > c; ++c) e[a] || (e[a] = 0), e[a]++;
          --d || g();
      },
      g = function () {
          urlArray = [];
          for (var b in e) urlArray.push(b);
          urlArray.sort(function (a, b) {
              return e[b] - e[a];
          });
          var c,
              d = new Array();
          if (urlArray.length > 0) {
              var f = new Array();
              for (c = 0; c < urlArray.length && (isInArray(getDomain(urlArray[c]), f) || (d.push(urlArray[c]), f.push(getDomain(urlArray[c]))), !(d.length > 9 || d.length == urlArray.length)); c++);
          }
          buildPopupDom(a, d);
      };
}
function isInArray(a, b) {
  for (var c in b) if (b[c] == a) return !0;
  return !1;
}
function getDomain(a) {
  return void 0 == a || "" == a
      ? ""
      : (-1 != a.indexOf("http://") && (a = a.substring(7, a.length)),
        -1 != a.indexOf("https://") && (a = a.substring(8, a.length)),
        -1 != a.indexOf("/") && (a = a.substring(0, a.indexOf("/"))),
        -1 != a.indexOf("www.") && (a = a.substring(4, a.length)),
        a);
}
function replace(a, b, c) {
  if ($.isArray(b)) {
      if ($.isArray(c)) {
          var d = 0;
          d = b.length <= c.length ? b.length : c.length;
          for (var e = 0; d > e; e++) a = a.replace(b[e], c[e]);
      } else for (var e = 0; e < b.length; e++) a = a.replace(b[e], c);
      return a;
  }
  return a.replace(b, c);
}
function calcNbFolder() {
  var a = function (a) {
      for (var b = 0, c = 0, d = 0; d != a.length; d++) void 0 != a[d].url ? c++ : b++;
      (localStorage.nbFolder = b), (localStorage.nbLink = c);
  };
  chrome.bookmarks.getChildren("1", a);
}
function getNbFolder() {
  return parseInt(localStorage.nbFolder);
}
function getNbLink() {
  return parseInt(localStorage.nbLink);
}
function site_name(a) {
  return (
      -1 !== a.indexOf("http://") && (a = a.substring(7, a.length)),
      -1 !== a.indexOf("https://") && (a = a.substring(8, a.length)),
      -1 !== a.indexOf("/") && (a = a.substring(0, a.indexOf("/"))),
      -1 !== a.indexOf("www.") && (a = a.substring(4, a.length)),
      (a = a.substring(0, a.lastIndexOf("."))),
      (a = a.substring(0, 1).toUpperCase() + a.substring(1, a.length)),
      (P = a.indexOf(".")),
      (a = a.substring(0, P) + " " + a.substring(P + 1, P + 2).toUpperCase() + a.substring(P + 2, a.length))
  );
}
function formatTitle(a, b) {
  return void 0 === a ? "" : (a.length > b && (a = a.substring(0, b - 1) + "..."), " " === a.charAt(0) && (a = a.substring(1)), a);
}
function log(a) {
  console.log(a), (localStorage.log += a + "/n");
}
function trackSearch(a) {
  _gaq.push(["_trackEvent", "Search", "Performed"]), _gaq.push(["_trackEvent", "Search Engines used", a]);
}
function trackOpeningFolder() {
  _gaq.push(["_trackEvent", "Open a folder", "Opened"]);
}
function trackOpeningOptions() {
  _gaq.push(["_trackEvent", "Options", "Opened"]);
}
function trackSavingOptions() {
  _gaq.push(["_trackEvent", "Options", "Saved"]);
}
function trackUsingBookmarksFromExtension() {
  console.log("            trackUsingBookmarksFromExtension"), _gaq.push(["_trackEvent", "Bookmarks from Bookolio", "Used"]);
}
function trackUsingMVS() {
  _gaq.push(["_trackEvent", "MVS Module", "Used"]);
}
function trackLaunchingBookolio() {
  _gaq.push(["_trackEvent", "Bookolio", "Launched"]);
}
function updateSEIconsAndLogoAnim() {
  $(".button")
      .prepend('<span class="hover"></span>')
      .each(function () {
          var a = $("span.hover", this).css("opacity", 0);
          $(this).hover(
              function () {
                  a.stop().fadeTo(300, 1);
              },
              function () {
                  a.stop().fadeTo(300, 0);
              }
          );
      }),
      $(".button").click(function (a) {
          $(this);
          $("#search_engine_logo img").animate({ opacity: "0" }, 200, function () {
              $(this).attr("src", "img/SearchEngines/" + localStorage.nameSearchEngine + ".png"), $(this).animate({ opacity: "1" }, 200);
          }),
              1 == a.which && updateSearchBar($(this).data("engine"));
      }),
      $(".hover").hover(
          function () {
              $(this).next("em").stop(!0, !0).animate({ opacity: "show", top: "-45" }, 300);
          },
          function () {
              $(this).next("em").stop(!0, !0).animate({ opacity: "hide", top: "-35" }, 300);
          }
      );
}
var Key = { A: 65, ALT: 18, BACKSPACE: 8, CTRL: 17, DASH: 54, DOT: 110, DOWN: 40, ENTER: 13, ESC: 27, LEFT: 37, MINUS: 109, RIGHT: 39, SHIFT: 16, SPACE: 32, UP: 38, Z: 90 },
  BookmarksModule = {
      $elem: null,
      _groupBackID: 0,
      _$draggedBookmark: null,
      _mouseDownOnBookmark: !1,
      _mouseMoveOnDocument: !1,
      _distX: 0,
      _distY: 0,
      construct: function (a) {
          (this.$elem = a), this._build();
      },
      _build: function () {
          var a = this;
          chrome.bookmarks.getTree(function (b) {
              var c = b[0].children[0].children,
                  d = b[0].children[1].children,
                  e = !1,
                  f = 0,
                  g = 0,
                  h = 30;
              for (f = 0; f < c.length; f++)
                  if (void 0 === c[f].url)
                      for (
                          a.$elem.append(
                              '<div class="cont" id="' +
                                  f +
                                  '"><div class="group-header"><div class="group_title">' +
                                  formatTitle(c[f].title, 23) +
                                  '</div><div class="group-actions"><div class="open"></div><!--div class="edit"></div><div class="delete"></div--></div></div><ul><div class="indicator"></div></ul></div>'
                          ),
                              g = 0;
                          g < c[f].children.length;
                          g++
                      )
                          a._addBookmarkInContainer(c[f].children[g], "#" + f, "old");
                  else e || (a._createLinksAloneContainer(), (e = !0)), a._addBookmarkInContainer(c[f], "#LinksAlone", "old");
              for (d.length > 0 && a._createOtherBookmarksContainer(), f = 0; f < d.length; f++) a._addBookmarkInContainer(d[f], "#OtherBookmarks", "old");
              if ("" !== a.$elem.html()) {
                  $(".group-header .group-actions .open").click(function () {
                      a._openFolder($(this).parents(".cont").attr("id"));
                  }),
                      $("[data-link-type=folder]").unbind("click"),
                      $("[data-link-type=folder]").click(function () {
                          if (1 === event.which) {
                              var b = $(this).attr("class");
                              a.updateContainerContent($(this).parent().parent().parent(), b, "leftToRight");
                          }
                      });
                  for (var i = Math.floor(screen.width / 202); i > 0; i--) {
                      var j = (screen.width - 202 * i) / (i - 1);
                      if (j > 30) break;
                      if (j > 20) {
                          h = j;
                          break;
                      }
                  }
                  a.applyMasonry(h),
                      a.$elem.on("mouseenter", ".cont li", function () {
                          a._mouseDownOnBookmark ||
                              a._mouseMoveOnDocument ||
                              $(this)
                                  .parents("ul")
                                  .children(".indicator")
                                  .stop()
                                  .animate({ top: $(this).position().top }, 200);
                      });
              } else a.$elem.hide();
              $(document).trigger("bookmarks-module-loaded");
          });
      },
      _displayBookmarksTreeOf: function (a, b) {
          for (var c = 0; c < a.length; c++) {
              for (var d = "", e = 0; b > e; e++) d += " ";
              void 0 === a[c].url
                  ? (console.log(d + "[ F ] : " + a[c].title + " (id = " + a[c].id + ", parentId = " + a[c].parentId + ")"), a[c].children.length > 0 && _this._displayBookmarksTreeOf(a[c].children, b + 4))
                  : console.log(d + "[ B ] : " + a[c].title + " (id = " + a[c].id + ", parentId = " + a[c].parentId + ")");
          }
      },
      updateContainerContent: function (a, b, c) {
          var d = this,
              e = !0,
              f = $(a).height(),
              g = $("ul:first", a).height(),
              h = $("ul:first .indicator", a).css("top");
          $(a).append('<ul class="new"><div class="indicator" style="top: ' + h + '; "></div></ul>'),
              chrome.bookmarks.getChildren(b + "", function (h) {
                  var i = -200,
                      j = 0,
                      k = 600,
                      l = "easeInOutCubic";
                  for (j = 0; j < h.length; j++) d._addBookmarkInContainer(h[j], a, "new");
                  $("ul.new", a).css("position", "absolute"),
                      "leftToRight" === c ? $("ul.new", a).css("left", 200) : "rightToLeft" === c && ($("ul.new", a).css("left", -200), (i = 200)),
                      $("ul.new", a).css("top", 30).animate({ left: 0 }, k, l),
                      $("ul:first", a).animate({ left: i }, k, l, function () {
                          (e = !1),
                              $("ul:first", a).remove(),
                              $(".group_back", a).remove(),
                              chrome.bookmarks.get(b + "", function (b) {
                                  $(".group_title", a).html(formatTitle(b[0].title, 23)),
                                      "1" !== b[0].parentId &&
                                          "2" !== b[0].id &&
                                          ($(a).append('<button class="group_back ' + d._groupBackID + '"><span class="hover"></span></button>'),
                                          $(".group_back." + d._groupBackID).click(function () {
                                              e || 1 !== event.which || (d.updateContainerContent(a, b[0].parentId, "rightToLeft"), (e = !0));
                                          }),
                                          d._groupBackID++,
                                          $(".group_back", a).hover(
                                              function () {
                                                  $("span.hover", this).stop().fadeTo(200, 1);
                                              },
                                              function () {
                                                  $("span.hover", this).stop().fadeTo(200, 0);
                                              }
                                          ));
                              });
                      });
                  var m = $(a).offset().left,
                      n = $(a).offset().top,
                      o = $(a).attr("id"),
                      p = $("ul.new", a).height(),
                      q = f - (g - p),
                      r = f - q;
                  $(a).animate({ height: q }, k, l),
                      $(".cont").each(function () {
                          m === $(this).offset().left &&
                              n < $(this).offset().top &&
                              o !== $(this).attr("id") &&
                              $(this).animate(
                                  {
                                      top:
                                          parseInt(
                                              $(this)
                                                  .css("top")
                                                  .substring(0, $(this).css("top").length - 2)
                                          ) - r,
                                  },
                                  k,
                                  l
                              );
                      }),
                      $("ul.new", a).removeClass("new"),
                      $("[data-link-type=folder]").unbind("click"),
                      $("[data-link-type=folder]").click(function () {
                          if (1 === event.which) {
                              var a = $(this).attr("class");
                              d.updateContainerContent($(this).parent().parent().parent(), a, "leftToRight");
                          }
                      });
              });
      },
      _addBookmarkInContainer: function (a, b, c) {
          var d = "";
          if (void 0 !== a.url) {
              var e = "";
              (e = a.title.length < 1 ? formatTitle(site_name(a.url), 23) : formatTitle(a.title, 23)),
                  (d = '<li data-bookmark-id="' + a.id + '" data-bookmark-index="' + a.index + '"><a href="' + a.url + '" target="' + localStorage.target + '" data-link-type="link">' + this.getFavicon(a.url) + e + "</a></li>");
          } else d = '<li><a class="' + a.id + '" data-link-type="folder">' + this.getFavicon(a.url) + "<b>" + formatTitle(a.title, 16) + '</b></a><div class="bm-arrow-r"></div></li>';
          "old" === c ? $("ul", b).append(d) : "new" === c && $("ul.new", b).append(d);
      },
      _createLinksAloneContainer: function () {
          this.$elem.append(
              '<div class="cont" id="LinksAlone"><div class="group-header"><div class="group_title">' +
                  chrome.i18n.getMessage("bmBarTitle") +
                  '</div><div class="group-actions"><div class="open"></div></div></div><ul><div class="indicator"></div></ul></div>'
          );
      },
      _createOtherBookmarksContainer: function () {
          this.$elem.append(
              '<div class="cont" id="OtherBookmarks"><div class="group-header"><div class="group_title">' +
                  chrome.i18n.getMessage("obmTitle") +
                  '</div><div class="group-actions"><div class="open"></div></div></div><ul><div class="indicator"></div></ul></div>'
          );
      },
      _openFolder: function (a) {
          (_this = this),
              trackOpeningFolder(),
              $("#" + a + " ul li a", _this.$elem).each(function (a, b) {
                  "link" === $(this).attr("data-link-type") && chrome.tabs.create({ url: b + "" });
              }),
              chrome.tabs.getCurrent(function (a) {
                  chrome.tabs.remove(a.id);
              });
      },
      refresh: function () {
          this.$elem.masonry().masonry("destroy"), $(".cont", this.$elem).remove(), this._build();
      },
      applyMasonry: function (a) {
          this.$elem.masonry({ itemSelector: ".cont", isFitWidth: !0, isAnimated: !0, gutter: a }),
              this.$elem.masonry("bindResize"),
              $(".indicator", this.$elem).each(function () {
                  $(this).css("top", $(this).parents(".cont").children("ul").position().top + 16);
              });
      },
      renameBookmark: function () {},
      deleteBookmark: function () {},
      moveBookmark: function () {},
      getFavicon: function (a) {
          return 1 == localStorage.faviconDisplayed || void 0 == localStorage.faviconDisplayed
              ? void 0 === a
                  ? '<img width="16" height="16" class="favicon" src="img/blue_folder.png"/>'
                  : '<img width="16" height="16" class="favicon" src ="chrome://favicon/' + a + '"/>'
              : "";
      },
  },
  ApplicationsModule = {
      $elem: null,
      construct: function (a) {
          var b = this;
          (b.$elem = a),
              $("#header-module span#showApplicationsModule").css("display", "inline-block"),
              b.build(),
              chrome.management.onUninstalled.addListener(function (a) {
                  $(".app#" + a, this.$elem).fadeOut(500, function () {
                      $(this).remove(), $(".app", this.$elem).stop().animate({ opacity: 1 }, 200);
                  });
              });
      },
      build: function () {
          var a = this,
              b = !1;
          $(".chromeWebStore").attr("href", "https://chrome.google.com/webstore/category/home?hl=" + getLang()),
              chrome.management.getAll(function (c) {
                  for (var d = 0; d < c.length; d++)
                      "extension" !== c[d].type &&
                          "theme" !== c[d].type &&
                          c[d].enabled &&
                          a.$elem.append(
                              '<div class="app" id="' +
                                  c[d].id +
                                  '"><a ' +
                                  localStorage.target +
                                  ' href="' +
                                  c[d].appLaunchUrl +
                                  '"><img width="80px" height="80px" src="' +
                                  c[d].icons[c[d].icons.length - 1].url +
                                  '"/><span class="name">' +
                                  formatTitle(c[d].name, 17) +
                                  '</span></a><div class="delete-button"></div></div>'
                          );
                  $(".app").hover(
                      function () {
                          (b = !0), $(this).prevAll(".app").stop().animate({ opacity: 0.3 }, 200), $(this).nextAll(".app").stop().animate({ opacity: 0.3 }, 200), $(".delete-button", this).stop().animate({ opacity: 1 }, 200);
                      },
                      function () {
                          (b = !1), $(this).prevAll(".app").stop().animate({ opacity: 1 }, 300), $(this).nextAll(".app").stop().animate({ opacity: 1 }, 300), $(".delete-button", this).stop().animate({ opacity: 0 }, 200);
                      }
                  ),
                      $(".app .delete-button").click(function () {
                          a.deleteApp($(this).parent(".app").attr("id"));
                      });
              });
      },
      deleteApp: function (a) {
          var b = { showConfirmDialog: !0 };
          chrome.management.uninstall("" + a, b);
      },
  },
  replaceList = [
      [" ", "&", "#"],
      ["+", "%26", "%23"],
      ["%20", "%26", "%23"],
  ],
  SearchModule = {
      $elem: null,
      $searchSuggestions: null,
      construct: function (a) {
          var b = this;
          displayEngines(),
              initEngine(),
              (this.$elem = a),
              (this.$searchSuggestions = $(".search-suggestions", a)),
              this.$elem.css("display", "block"),
              $("#searchInput", this.$elem)
                  .click(function () {
                      "" !== $(this).val() && "true" == localStorage.useBookmarksSearch && (b.instantSearch($(this).val()), b.$searchSuggestions.fadeIn(), $("li", b.$searchSuggestions).off("mouseenter"), event.stopPropagation());
                  })
                  .keydown(function (a) {
                      var c = a.which;
                      return (c === Key.ENTER && $("ul li.active", b.$searchSuggestions).exists()) || c === Key.UP || c === Key.DOWN ? (a.preventDefault(), !1) : void 0;
                  })
                  .keyup(function (a) {
                      if ("true" == localStorage.useBookmarksSearch) {
                          var c = a.which;
                          (c === Key.BACKSPACE && "" === $(this).val()) || c === Key.ESC
                              ? b.hideSearchSuggestions()
                              : "" !== $(this).val() && c !== Key.DOWN && c !== Key.UP && c !== Key.ENTER && (b.instantSearch($(this).val()), b.$searchSuggestions.fadeIn(), $("li", b.$searchSuggestions).off("mouseenter")),
                              "block" == b.$searchSuggestions.css("display") &&
                                  (c === Key.DOWN
                                      ? $("ul li.active", b.$searchSuggestions).exists()
                                          ? $("ul li.active", b.$searchSuggestions).mouseleave().next("li").mouseenter()
                                          : $("ul li:first-of-type", b.$searchSuggestions).mouseenter()
                                      : c === Key.UP
                                      ? $("ul li.active", b.$searchSuggestions).exists()
                                          ? $("ul li.active", b.$searchSuggestions).mouseleave().prev("li").mouseenter()
                                          : $("ul li:last-of-type", b.$searchSuggestions).mouseenter()
                                      : c === Key.ENTER && $("ul li.active", b.$searchSuggestions).exists() && window.location.replace($("ul li.active a", b.$searchSuggestions).attr("href")));
                      }
                  }),
              b.$searchSuggestions.click(function (a) {
                  a.stopPropagation();
              });
      },
      instantSearch: function (a) {
          var b = this;
          chrome.bookmarks.search(a, function (c) {
              var d = new RegExp(a, "i");
              if (($("ul", b.$searchSuggestions).empty(), c.length > 0)) {
                  var e = 0;
                  c.every(function (c) {
                      return (
                          void 0 !== c.url &&
                              d.test(c.title) &&
                              ($("ul", b.$searchSuggestions).append('<li><a href="' + c.url + '">' + BookmarksModule.getFavicon(c.url) + "<div>" + b._emphasizedResult(a, c.title) + "</div></a></li>"), e++),
                          e >= 10 ? !1 : !0
                      );
                  }),
                      0 === e && $("ul", b.$searchSuggestions).append('<li class="noResults">' + chrome.i18n.getMessage("search_suggestions_no_result") + "</li>"),
                      $("ul li:not(.noResults)", b.$searchSuggestions)
                          .mouseenter(function () {
                              $("ul li", b.$searchSuggestions).exists() && $("ul li", b.$searchSuggestions).removeClass("active"), $(this).addClass("active");
                          })
                          .mouseleave(function () {
                              $(this).removeClass("active");
                          });
              } else $("ul", b.$searchSuggestions).append('<li class="noResults">' + chrome.i18n.getMessage("search_suggestions_no_result") + "</li>");
          });
      },
      _emphasizedResult: function (a, b) {
          var c = a.toLowerCase(),
              d = b.toLowerCase(),
              e = d.split(c),
              f = "";
          return (
              e.forEach(function (c, d) {
                  "" === c && 0 === d
                      ? ((f = "<strong>" + b.substr(0, a.length) + "</strong>"), (b = b.slice(a.length)))
                      : "" === c && d === e.length + 1
                      ? (f = f.concat("<strong>" + b + "</strong>"))
                      : "" !== c && d === e.length + 1
                      ? (f = f.concat(b))
                      : ((f = f.concat(b.substr(0, c.length) + "<strong>" + b.substr(c.length, a.length) + "</strong>")), (b = b.slice(c.length + a.length)));
              }),
              f
          );
      },
      hideSearchSuggestions: function () {
          var a = this;
          a.$searchSuggestions.fadeOut(function () {
              $("ul", a.$searchSuggestions).empty();
          });
      },
  },
  OptionsModule = {
      $elem: null,
      searchEngines: null,
      version: "0.9.7.0",
      construct: function (a) {
          var b = this;
          (b.$elem = a),
              (b.searchEngines = new Array(
                  "amazon",
                  "ask",
                  "baidu",
                  "bing",
                  "dailymotion",
                  "deezer",
                  "deviantart",
                  "digg",
                  "duckduckgo",
                  "ebay",
                  "eurogamer",
                  "facebook",
                  "flickr",
                  "gamespot",
                  "google",
                  "ign",
                  "myspace",
                  "picasa",
                  "twitter",
                  "wikipedia",
                  "yahoo",
                  "youtube"
              )),
              b.initialize(),
              $(".rail li", b.$elem).click(function () {
                  if (!$(this).hasClass("selected")) {
                      var a = $(".content section.visible", b.$elem),
                          c = $(".content section[data-option-section=" + $(this).data("option-section") + "]", b.$elem);
                      $(".rail li.selected").removeClass("selected"),
                          $(this).addClass("selected"),
                          $(".option .wrap", a).animate({ left: "30px" }, 300),
                          $(".option .wrap", c).css("left", "30px").animate({ left: "0px" }, 400),
                          a.animate({ opacity: 0 }, 200, function () {
                              a.removeClass("visible"), c.css("opacity", 0).addClass("visible").animate({ opacity: 1 }, 200);
                          }),
                          $(".rail .indicator").animate({ top: $(this).offset().top - 10 }, 200);
                  }
              }),
              $("button.submit", b.$elem).click(function () {
                  b.save(), window.location.reload();
              });
      },
      initialize: function () {
          (void 0 === localStorage.hasBeenSetUpForVersion || localStorage.hasBeenSetUpForVersion !== this.version) &&
              (void 0 === localStorage.useApplicationsModule && (localStorage.useApplicationsModule = "true"),
              void 0 === localStorage.useSearchModule && (localStorage.useSearchModule = "true"),
              this.searchEngines.forEach(function (a) {
                  void 0 === localStorage[a] && (localStorage[a] = "true");
              }),
              void 0 === localStorage.target && (localStorage.target = "_self"),
              void 0 === localStorage.useBookmarksSearch && (localStorage.useBookmarksSearch = "true"),
              (localStorage.hasBeenSetUpForVersion = this.version)),
              "true" == localStorage.useApplicationsModule && (document.getElementById("useApplicationsModule").checked = !0),
              "true" == localStorage.useSearchModule && (document.getElementById("useSearchModule").checked = !0),
              0 == localStorage.faviconDisplayed ? (document.getElementById("faviconNotDisplayed").checked = !0) : (document.getElementById("faviconDisplayed").checked = !0),
              "_blank" === localStorage.target ? (document.getElementById("newTab").checked = !0) : (document.getElementById("currentTab").checked = !0),
              this.searchEngines.forEach(function (a) {
                  "true" === localStorage[a] && (document.getElementById(a + "Box").checked = !0);
              }),
              "last" == localStorage.FavOrLast
                  ? (document.getElementById("lastEngineRadio").checked = !0)
                  : ((document.getElementById("favEngineRadio").checked = !0), (document.all.favEngine.value = void 0 != localStorage.EngineToLoad ? localStorage.EngineToLoad : "google")),
              "true" == localStorage.useBookmarksSearch ? (document.getElementById("allowBookmarksSearch").checked = !0) : (document.getElementById("prohibitBookmarksSearch").checked = !0),
              "whiteBar" == localStorage.mvsDisplayStyle
                  ? ((document.getElementById("whiteBar").checked = !0), $("#mvs-module").append('<div class="title"><span class="arrow"></span></div><div id="content"></div>'), $("#mvs-module").attr("class", "whiteBar"))
                  : ((localStorage.mvsDisplayStyle = "dropDownList"),
                    (document.getElementById("dropDownList").checked = !0),
                    $("#header-module .buttons").append('<span id="showHideMVSModule" class="showHideMVSModule headerButton">' + chrome.i18n.getMessage("showHideMVSModule") + "</span>"),
                    $("#mvs-module").append('<div class="blackTriangle"></div><ul></ul>'),
                    $("#mvs-module").attr("class", "dropDownList")),
              $("#options_save_button").html(chrome.i18n.getMessage("options_save_button")),
              $(".showBookmarksModule").html(chrome.i18n.getMessage("showBookmarksModule")),
              $(".showApplicationsModule").html(chrome.i18n.getMessage("showApplicationsModule")),
              $(".showHideRCTModule").html(chrome.i18n.getMessage("showHideRCTModule")),
              $("#chrome_w_bookmarks").html(chrome.i18n.getMessage("chrome_w_bookmarks")),
              $("#chrome_w_extensions").html(chrome.i18n.getMessage("chrome_w_extensions")),
              $("#chrome_w_history").html(chrome.i18n.getMessage("chrome_w_history")),
              $("#chrome_w_downloads").html(chrome.i18n.getMessage("chrome_w_downloads")),
              $("#chrome_w_options").html(chrome.i18n.getMessage("chrome_w_options")),
              $("#backgroundImagePath").attr("placeholder", chrome.i18n.getMessage("options_background_image_input_placeholder")),
              $("#backgroundInfo").html(chrome.i18n.getMessage("options_background_image_info")),
              $("[data-option-title]").each(function () {
                  $(this).html(chrome.i18n.getMessage($(this).data("option-title")));
              }),
              $("[data-option-input-label]").each(function () {
                  $(this).html(chrome.i18n.getMessage($(this).data("option-input-label")));
              }),
              $("#options-module #backgroundImagePath").attr("value", localStorage.backgroundImagePath),
              localStorage.backgroundImagePath && "" != localStorage.backgroundImagePath
                  ? "true" == localStorage.backgroundImageAsPattern
                      ? ((document.getElementById("backgroundImageAsPattern").checked = !0), $("#view-main").css({ "background-image": 'url("' + localStorage.backgroundImagePath + '")' }))
                      : $("#view-main").css({ "background-image": 'url("' + localStorage.backgroundImagePath + '")', "background-repeat": "no-repeat", "background-attachment": "fixed", "background-size": "100% 100%" })
                  : $("body").css({ "background-image": 'url("../img/texture_2.png")' });
      },
      save: function () {
          trackSavingOptions(),
              (localStorage.useSearchModule = 1 == document.getElementById("useSearchModule").checked ? "true" : "false"),
              (localStorage.useApplicationsModule = 1 == document.getElementById("useApplicationsModule").checked ? "true" : "false"),
              (localStorage.backgroundImagePath = document.getElementById("backgroundImagePath").value),
              (localStorage.backgroundImageAsPattern = 1 == document.getElementById("backgroundImageAsPattern").checked ? !0 : !1),
              document.getElementById("faviconDisplayed").checked ? ((localStorage.faviconDisplayed = 1), (localStorage.faviconNotDisplayed = 0)) : ((localStorage.faviconDisplayed = 0), (localStorage.faviconNotDisplayed = 1)),
              (localStorage.target = document.getElementById("newTab").checked ? "_blank" : "_self"),
              document.getElementById("favEngineRadio").checked ? ((localStorage.EngineToLoad = document.getElementById("favEngine").value), (localStorage.FavOrLast = "fav")) : (localStorage.FavOrLast = "last"),
              OptionsModule.searchEngines.forEach(function (a) {
                  localStorage[a] = document.getElementById(a + "Box").checked;
              }),
              (localStorage.useBookmarksSearch = document.getElementById("allowBookmarksSearch").checked),
              (localStorage.mvsDisplayStyle = document.getElementById("whiteBar").checked ? "whiteBar" : "dropDownList");
      },
  };
jQuery.fn.exists = function () {
  return this.length > 0;
};
var _gaq = _gaq || [];
_gaq.push(["_setAccount", "UA-19023546-3"]),
  _gaq.push(["_trackPageview"]),
  (function () {
      console.log("analytics.js: anonymous function launched");
      var a = document.createElement("script");
      (a.type = "text/javascript"), (a.async = !0), (a.src = "https://ssl.google-analytics.com/ga.js");
      var b = document.getElementsByTagName("script")[0];
      b.parentNode.insertBefore(a, b);
  })(),
  $(document).ready(function () {
      if (
          ($(document).bind("bookmarks-module-loaded", function () {
              $("#header-module").animate({ opacity: 1, top: "0px" }, 500),
                  "true" === localStorage.useSearchModule && SearchModule.$elem.animate({ opacity: 1 }, 200),
                  BookmarksModule.$elem.animate({ opacity: 1 }, 200),
                  $("#mvs-module").animate({ opacity: 1 }, 200);
          }),
          OptionsModule.construct($("#options-module")),
          "whiteBar" === localStorage.mvsDisplayStyle)
      ) {
          var a = $("#mvs-module").html();
          $("#mvs-module").remove(), $("#view-main #search-module").after('<div id="mvs-module" class="whiteBar">' + a + "</div>"), buildTypedUrlList();
      }
      BookmarksModule.construct($("#bookmarks-module")),
          "true" === localStorage.useApplicationsModule && ApplicationsModule.construct($("#applications-module")),
          "true" === localStorage.useSearchModule && SearchModule.construct($("#search-module")),
          trackLaunchingBookolio(),
          void 0 == localStorage.EngineToLoad ? $("#search_engine_logo img").attr("src", "img/SearchEngines/google.png") : $("#search_engine_logo img").attr("src", "img/SearchEngines/" + localStorage.EngineToLoad + ".png"),
          $(".buttonSearch")
              .prepend('<span class="hover"></span>')
              .each(function () {
                  var a = $("span.hover", this).css("opacity", 0);
                  $(this).hover(
                      function () {
                          a.stop().fadeTo(300, 1);
                      },
                      function () {
                          a.stop().fadeTo(300, 0);
                      }
                  );
              });
      var b = !1;
      $("#options_button").click(function () {
          $("#view-options").css({ display: "block", left: screen.width }),
              $("#view-main")
                  .addClass("scale-down")
                  .delay(600)
                  .animate({ left: -screen.width }, 800, "easeOutExpo", function () {
                      $(this).removeClass("scale-down");
                  }),
              $("#header-module").animate({ top: -38 }),
              $("#view-options")
                  .addClass("scale-down")
                  .delay(600)
                  .animate({ top: 0, left: 0 }, 800, "easeOutExpo", function () {
                      $(this).removeClass("scale-down");
                  });
      }),
          $("#options_save_button").click(function () {
              b = !1;
          }),
          $("#options-module button.cancel").click(function () {
              $("#view-main")
                  .addClass("scale-down")
                  .delay(600)
                  .animate({ left: 0 }, 800, "easeOutExpo", function () {
                      $(this).removeClass("scale-down"), $("#header-module").animate({ top: 0 });
                  }),
                  $("#view-options")
                      .addClass("scale-down")
                      .delay(600)
                      .animate({ left: screen.width }, 800, "easeOutExpo", function () {
                          $(this).css({ display: "none" }), $(this).removeClass("scale-down");
                      }),
                  (b = !1);
          }),
          $(".button").click(function () {
              $("#search_engine_logo img").animate({ opacity: "0" }, 200, function () {
                  $(this).attr("src", "img/SearchEngines/" + localStorage.nameSearchEngine + ".png"), $(this).animate({ opacity: "1" }, 200);
              });
          }),
          $(".erase-button").click(function () {
              $(this).prev("input[type=text]").val("");
          }),
          $(".showBookmarksModule").click(function () {
              "none" == BookmarksModule.$elem.css("display") &&
                  $("#applications-module").animate({ opacity: 0 }, 200, function () {
                      $("#applications-module").css({ display: "none" }), BookmarksModule.$elem.css({ display: "block" }), BookmarksModule.$elem.masonry("reloadItems").masonry(), BookmarksModule.$elem.animate({ opacity: 1 }, 200);
                  });
          }),
          $(".showApplicationsModule").click(function () {
              "none" == $("#applications-module").css("display") &&
                  BookmarksModule.$elem.animate({ opacity: 0 }, 200, function () {
                      $("#applications-module").css({ display: "block" }), BookmarksModule.$elem.css({ display: "none" }), $("#applications-module").animate({ opacity: 1 }, 200);
                  });
          });
      var c = $("#rct-module"),
          d = !1,
          e = !1,
          f = !1;
      if (
          ($(".showHideRCTModule")
              .click(function () {
                  "none" == c.css("display")
                      ? (0 == f && (getRecentlyClosedTabs(), (f = !0), $("#rct-module").css({ left: $(".showHideRCTModule").offset().left })), c.css({ display: "block" }), c.animate({ opacity: 1, top: "45px" }, 250))
                      : c.animate({ opacity: 0, top: "35px" }, 250, function () {
                            c.css({ display: "none" });
                        });
              })
              .bind("mouseleave", function () {
                  e = !0;
              })
              .bind("mouseenter", function () {
                  e = !1;
              }),
          c
              .bind("mouseenter", function () {
                  d = !1;
              })
              .bind("mouseleave", function () {
                  d = !0;
              }),
          "dropDownList" == localStorage.mvsDisplayStyle)
      ) {
          var g = $("#mvs-module"),
              h = !1,
              i = !1,
              j = !1;
          $(".showHideMVSModule")
              .click(function () {
                  "none" == g.css("display")
                      ? (0 == j && (buildTypedUrlList(), (j = !0), $("#mvs-module").css({ left: $(".showHideMVSModule").offset().left })), g.css({ display: "block" }), g.animate({ opacity: 1, top: "45px" }, 250))
                      : g.animate({ opacity: 0, top: "35px" }, 250, function () {
                            g.css({ display: "none" });
                        });
              })
              .bind("mouseleave", function () {
                  i = !0;
              })
              .bind("mouseenter", function () {
                  i = !1;
              }),
              g
                  .bind("mouseenter", function () {
                      h = !1;
                  })
                  .bind("mouseleave", function () {
                      h = !0;
                  });
      }
      var k = $("#chrome-module"),
          l = !1,
          m = !1,
          n = !1;
      $(".showHideChromeModule")
          .click(function () {
              "none" == k.css("display")
                  ? (0 == n && ((n = !0), $("#chrome-module").css({ left: $(".showHideChromeModule").offset().left })), k.css({ display: "block" }), k.animate({ opacity: 1, top: "45px" }, 250))
                  : k.animate({ opacity: 0, top: "35px" }, 250, function () {
                        k.css({ display: "none" });
                    });
          })
          .bind("mouseleave", function () {
              m = !0;
          })
          .bind("mouseenter", function () {
              m = !1;
          }),
          k
              .bind("mouseenter", function () {
                  l = !1;
              })
              .bind("mouseleave", function () {
                  l = !0;
              }),
          $(document).click(function () {
              "block" == c.css("display") &&
                  (d || e) &&
                  c.animate({ opacity: 0, top: "35px" }, 250, function () {
                      c.css({ display: "none" }), (d = !1);
                  }),
                  "dropDownList" == localStorage.mvsDisplayStyle &&
                      "block" == g.css("display") &&
                      (h || i) &&
                      g.animate({ opacity: 0, top: "35px" }, 250, function () {
                          g.css({ display: "none" }), (h = !1);
                      }),
                  "block" == k.css("display") &&
                      (l || m) &&
                      k.animate({ opacity: 0, top: "35px" }, 250, function () {
                          k.css({ display: "none" }), (l = !1);
                      }),
                  null !== SearchModule.$searchSuggestions && "block" === SearchModule.$searchSuggestions.css("display") && SearchModule.hideSearchSuggestions();
          }),
          $("#options_button, #header-module, #mvs-module, #rct-module, #chrome-module, #bookmarks-module, #applications-module").mousedown(function () {
              return !1;
          }),
          $(".chrome-module-bookmarks").click(function () {
              chrome.tabs.create({ url: "chrome://bookmarks/" });
          }),
          $(".chrome-module-extensions").click(function () {
              chrome.tabs.create({ url: "chrome://extensions/" });
          }),
          $(".chrome-module-history").click(function () {
              chrome.tabs.create({ url: "chrome://history/" });
          }),
          $(".chrome-module-downloads").click(function () {
              chrome.tabs.create({ url: "chrome://downloads/" });
          }),
          $(".chrome-module-settings").click(function () {
              chrome.tabs.create({ url: "chrome://settings/" });
          });
  });
